# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_structure.ipynb.

# %% auto 0
__all__ = ['tables', 'nested_tags_separator', 'assemble_name', 'is_multivalued', 'multivalued_columns']

# %% ../nbs/05_structure.ipynb 2
import pathlib
import re

import numpy as np
import pandas as pd

# %% ../nbs/05_structure.ipynb 6
tables = {
    'outsiders': {
        'base_url': 'https://contrataciondelsectorpublico.gob.es/sindicacion/sindicacion_1044/',
        'base_filename': 'PlataformasAgregadasSinMenores_',
        'naming_filename': 'outsiders.yaml'
        },
    'insiders': {
        'base_url': 'https://contrataciondelsectorpublico.gob.es/sindicacion/sindicacion_643/',
        'base_filename': 'licitacionesPerfilesContratanteCompleto3_',
        'naming_filename': 'insiders_minors.yaml'
        },
    'minors': {
        'base_url': 'https://contrataciondelsectorpublico.gob.es/sindicacion/sindicacion_1143/',
        'base_filename': 'contratosMenoresPerfilesContratantes_',
        'naming_filename': 'insiders_minors.yaml'
        }
    }

# %% ../nbs/05_structure.ipynb 16
nested_tags_separator = ' - '

# %% ../nbs/05_structure.ipynb 20
def assemble_name(
    tags: list # Tags
    ) -> str: # Name
    "Assemble the name of field/column in the DataFrame from a path of nested tags"
    
    tags = filter(pd.notna, tags)
    tags = filter(lambda x: x!='', tags)
    
    return nested_tags_separator.join(tags)

# %% ../nbs/05_structure.ipynb 28
def is_multivalued(
    s: pd.Series # Input
    ) -> bool: # `True` if the input contains some `list`
    "Returns `True` is the given `pd.Series` has a `list` at any index"
    
    return s.apply(lambda x: (type(x) == list) or (type(x) == np.ndarray)).any()

# %% ../nbs/05_structure.ipynb 33
def multivalued_columns(
    df: pd.DataFrame # Input
    ) -> list: # Columns' names
    "Returns the list of multi-valued columns"
    
    # `True` or `False` for every column
    is_column_multivalued = df.apply(is_multivalued, axis='index')
    
    return is_column_multivalued[is_column_multivalued==True].index.tolist()
